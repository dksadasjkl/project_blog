<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.home_project.repository.UserMapper">

    <resultMap id="RoleResultMap" type="com.study.home_project.entity.Role">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="roleNameKor" column="role_name_kor" />
    </resultMap>

    <resultMap id="RoleRegisterResultMap" type="com.study.home_project.entity.RoleRegister">
        <id property="roleRegisterId" column="role_register_id" />
        <result property="userId" column="user_id" />
        <result property="roleId" column="role_id" />
        <association property="role" resultMap="RoleResultMap" />
    </resultMap>

    <resultMap id="UserResultMap" type="com.study.home_project.entity.User">
        <id property="userId" column="user_id" />
        <result property="username" column="user_username" />
        <result property="password" column="user_password" />
        <result property="name" column="user_name" />
        <result property="telNumber" column="user_tel_number" />
        <result property="nickname" column="user_nickname" />
        <result property="profileImageUrl" column="user_profile_image_url" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <collection property="roleRegisters" javaType="list" resultMap="RoleRegisterResultMap" />
    </resultMap>

    <insert id="saveUser"
            parameterType="com.study.home_project.entity.User"
            keyProperty="userId"
            useGeneratedKeys="true"
    >
        insert into
            user_tb
        values
        (0, #{username}, #{password}, #{name}, #{telNumber}, #{nickname}, #{profileImageUrl}, now(), now())
    </insert>

    <insert id="saveRole">
        insert into
            role_register_tb
        values
            (0, #{userId}, #{roleId}, now(), now())
    </insert>

    <insert id="saveOAuth2"
            parameterType="com.study.home_project.entity.OAuth2"
    >
        insert into
        oauth2_tb
        values
        (0, #{userId}, #{oAuth2Name}, #{providerName}, now(), now())
    </insert>

    <select id="findUserByUsername"
            parameterType="string"
            resultMap="UserResultMap"
    >
        select
            ut.user_id,
            ut.user_username,
            ut.user_password,
            ut.user_name,
            ut.user_tel_number,
            ut.user_nickname,
            ut.user_profile_image_url,
            ut.create_date,
            ut.update_date,
            rrt.role_register_id,
            rrt.role_id,
            rt.role_name,
            rt.role_name_kor
        from
        user_tb ut
            left outer join role_register_tb rrt on(rrt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = rrt.role_id)
        where
            ut.user_username = #{username}
    </select>

    <select id="findUserByOAuth2name"
            resultMap="UserResultMap"
    >
            select
            ut.user_id,
            ut.user_username,
            ut.user_password,
            ut.user_name,
            ut.user_tel_number,
            ut.user_nickname,
            ut.user_profile_image_url,
            ut.create_date,
            ut.update_date,
            rrt.role_register_id,
            rrt.role_id,
            rt.role_name,
            rt.role_name_kor,
            ot.oauth2_id,
            ot.oauth2_name,
            ot.provider_name
        from
            user_tb ut
            left outer join role_register_tb rrt on(rrt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = rrt.role_id)
            left outer join oauth2_tb ot on(ut.user_id = ot.user_id)
        where
            ot.oauth2_name = #{oAuth2name}
    </select>

    <select id="findUserByNickname"
            parameterType="string"
            resultMap="UserResultMap"
    >
        select
            ut.user_id,
            ut.user_username,
            ut.user_password,
            ut.user_name,
            ut.user_tel_number,
            ut.user_nickname,
            ut.user_profile_image_url,
            ut.create_date,
            ut.update_date,
            rrt.role_register_id,
            rrt.role_id,
            rt.role_name,
            rt.role_name_kor
        from
            user_tb ut
            left outer join role_register_tb rrt on(rrt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = rrt.role_id)
        where
            ut.user_nickname = #{nickname}
    </select>

    <update id="editPassword"
            parameterType="com.study.home_project.entity.User">
        update
        user_tb
        set
        user_password = #{password},
        update_date = now()
        where
        user_id =  #{userId}
    </update>

<!--    <update id="editNickname"-->
<!--            parameterType="com.study.home_project.entity.User">-->
<!--        update-->
<!--        user_tb-->
<!--        set-->
<!--        user_nickname = #{nickname},-->
<!--        update_date = now()-->
<!--        where-->
<!--        user_id =  #{userId}-->
<!--    </update>-->

<!--    <update id="updateProfileImageUrl"-->
<!--            parameterType="com.study.home_project.entity.User">-->
<!--        update user_tb-->
<!--        <trim prefix="set" suffixOverrides=",">-->
<!--            <if test="profileImageUrl != null and profileImageUrl != ''">-->
<!--                user_profile_image_url = #{profileImageUrl},-->
<!--            </if>-->
<!--            update_date = now()-->
<!--        </trim>-->
<!--        where user_id = #{userId}-->
<!--    </update>-->

</mapper>